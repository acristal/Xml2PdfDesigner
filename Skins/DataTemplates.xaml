<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behavior="clr-namespace:Xml2PdfDesigner.Behavior"
                    xmlns:c="clr-namespace:Xml2PdfDesigner.Converter"
                    xmlns:m="clr-namespace:Xml2PdfDesigner.Model"
                    xmlns:v="clr-namespace:Xml2PdfDesigner.View"
                    xmlns:vm="clr-namespace:Xml2PdfDesigner.ViewModel"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <c:ElementTypeToImageConverter x:Key="ElementTypeToImageConverter" />

    <Style TargetType="Control" x:Key="EmptyFocusVisualStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ElementBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="RoyalBlue" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="ElementContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Canvas.Left" Value="{Binding AbsoluteCoordinate.X}" />
        <Setter Property="Canvas.Top" Value="{Binding AbsoluteCoordinate.Y}" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}" />-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!-- Doesn't work -->
    <Style x:Key="CleanListViewStyle">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="DarkGoldenrod" />
        </Style.Resources>
    </Style>

    <ItemsPanelTemplate x:Key="ElementPanelTemplate">
        <Canvas IsItemsHost="True" />
    </ItemsPanelTemplate>

    <DataTemplate x:Key="TemplateGraph"
                  DataType="m:Template">
        <DataTemplate.Resources>
            <DataTemplate x:Key="ElementTemplate" DataType="{x:Type m:Element}">
                <Border Style="{StaticResource ElementBorderStyle}">
                    <Grid Width="{Binding AbsoluteCoordinate.Width, Mode=TwoWay}" Height="{Binding AbsoluteCoordinate.Height, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <behavior:ResizeBehavior AttachedElement="{Binding}" />
                        </i:Interaction.Behaviors>
                        <ListView ItemsPanel="{StaticResource ElementPanelTemplate}"
                                  ItemsSource="{Binding Elements}"
                                  ItemTemplate="{DynamicResource ElementTemplate}"
                                  ItemContainerStyle="{StaticResource ElementContainerStyle}"
                                  SelectedItem="{Binding DataContext.SelectedElement, RelativeSource={RelativeSource AncestorType={x:Type v:XmlTemplateView}}}" />
                    </Grid>
                </Border>
            </DataTemplate>
        </DataTemplate.Resources>

        <Grid>
            <ListView ItemsPanel="{StaticResource ElementPanelTemplate}"
                      ItemsSource="{Binding Elements}"
                      ItemTemplate="{StaticResource ElementTemplate}"
                      ItemContainerStyle="{StaticResource ElementContainerStyle}"
                      SelectedItem="{Binding DataContext.SelectedElement, RelativeSource={RelativeSource AncestorType={x:Type v:XmlTemplateView}}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TemplateList"
                  DataType="m:Template">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" FontWeight="Bold" />

            <Separator Grid.Row="1" />

            <TreeView x:Name="tvElement"
                      Grid.Row="2"
                      Background="Transparent"
                      ItemsSource="{Binding Elements}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction
                            Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource AncestorType={x:Type v:XmlTemplateView}}}"
                            CommandParameter="{Binding ElementName=tvElement, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Elements}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Type, Converter={StaticResource ElementTypeToImageConverter}}"
                                   Width="16" Height="16" />
                            <TextBlock Text="{Binding Name}" />
                            <i:Interaction.Behaviors>
                                <behavior:FrameworkElementDragBehavior />
                                <behavior:FrameworkElementDropBehavior />
                            </i:Interaction.Behaviors>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>
    </DataTemplate>
</ResourceDictionary>